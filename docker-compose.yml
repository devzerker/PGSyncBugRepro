version: "3.8"
services:
  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: ./dockerfile-pg
      args:
        POSTGRES_DB: ${POSTGRES_DB}
    environment:
      POSTGRESQL_DATABASE: ${POSTGRES_DB}
      POSTGRESQL_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 1s
      retries: 100
    restart: unless-stopped
  redis:
    container_name: redis
    image: redis:7.0.7
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      retries: 100
    restart: unless-stopped
  flyway:
    image: flyway/flyway:9.3.1
    command: -url=jdbc:postgresql://postgres:5432/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
  elasticsearch:
    container_name: elasticsearch
    image: bitnami/elasticsearch:8.5.0
    ports:
      - "${ELASTIC_PORT}:9200"
    environment:
      - xpack.security.enabled=false
      - network.host=127.0.0.1
      - http.host=0.0.0.0
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 1s
      retries: 100
  pgsync:
    container_name: pgsync
    build:
      context: ./pgsync
      dockerfile: dockerfile-pgsync
    command: >
      sh -c "bootstrap --config schema.json && pgsync --config schema.json -d"
    sysctls:
      - net.ipv4.tcp_keepalive_time=200
      - net.ipv4.tcp_keepalive_intvl=200
      - net.ipv4.tcp_keepalive_probes=5
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - PG_USER=${POSTGRES_USER}
      - PG_HOST=postgres
      - PG_PASSWORD=${POSTGRES_PASSWORD}
      - LOG_LEVEL=INFO
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis
      - REDIS_AUTH=${REDIS_PASSWORD}
